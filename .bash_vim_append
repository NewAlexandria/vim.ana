#!/usr/bin/sh
# Console
#source ~/.git-completion.bash
#export PS1='\[\033[01;34m\]\u@\h\[\033[00m\]\] \w\033[32m\]$(__git_ps1) \[\033[1;31m\]| \[\033[00m\]'
#   prompt   color  bold   u@host color  stop  path color green git-repo  color  stop | norm. color" 
#                            ^^--replace this if you're working locally" 

alias cdv='cd ~/.vim.ana'
export GIT_EDITOR="vim"

function mvi() {
  srvname=$1
  [ ! -z $1 ] || srvname='VIM'  # like Ruby's ||=
  vars=$2  # brittle assumption that args 2->âˆž can be passed after `--remote`
  capsonly=`echo $srvname | grep [A-Z] - `
  if [ "$capsonly" != "$srvname" ]; then
    srvname='VIM'
    vars=$1
  fi
 
  echo "Will use server named: $srvname"
 
  slist=`vim --serverlist | grep "$srvname"`
  echo ".. [ found server: $slist ]"
  if [ "$slist" = "$srvname" ]; then
    echo '... server pre-existing'
 
    vim --servername $srvname --remote $vars
  else
    echo '... creating new server with MacVim'
 
    mvim --servername $srvname $vars
  fi
}

function vis() {
  func_arr=( 'nvim' 'mvim' 'vim' )
  for func in "${func_arr[@]}"
  do
    if [ -n "$(type -t $func)" ] && [ "$(type -t $func)" = file ]
    then 
      echo "Using $func"
      mvim --servername $1 --remote-silent ${*:2}
      break
    fi
  done
}

# takes the files returned by an ag search, and opens them in vim
function agv() {
  func_arr=( 'nvim' 'mvim' 'vim' )
  for func in "${func_arr[@]}"
  do
    if [ -n "$(type -t $func)" ] && [ "$(type -t $func)" = file ]
    then 
      echo "Using $func"
      $func $(ag "$1" $2 -l --nocolor | xargs)
      break
    fi
  done
}

# takes the files returned by an ack search, and opens them in vim
function ackv() {
  func_arr=( 'nvim' 'mvim' 'vim' )
  for func in "${func_arr[@]}"
  do
    if [ -n "$(type -t $func)" ] && [ "$(type -t $func)" = file ]
    then 
      echo "Using $func"
      mvim $(ack $1 $2 -l --nocolor | xargs)
      break
    fi
  done
}

